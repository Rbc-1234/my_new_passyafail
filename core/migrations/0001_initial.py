# Generated by Django 4.0.1 on 2022-02-22 06:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='become_sponsor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('company_web', models.CharField(max_length=255, null=True)),
                ('tob', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'become_sponsor',
            },
        ),
        migrations.CreateModel(
            name='blog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('titleSlag', models.TextField()),
                ('image', models.CharField(max_length=255, null=True)),
                ('s_description', models.TextField()),
                ('description', models.TextField()),
                ('meta_title', models.TextField()),
                ('meta_desc', models.TextField()),
                ('status', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'blog',
            },
        ),
        migrations.CreateModel(
            name='contest_category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=255, null=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('masterstatus', models.CharField(default=None, max_length=200)),
            ],
            options={
                'db_table': 'contest_category',
            },
        ),
        migrations.CreateModel(
            name='contest_price_list',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('price_name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'contest_price_list',
            },
        ),
        migrations.CreateModel(
            name='contest_prizes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contest_id', models.IntegerField()),
                ('prize_number', models.IntegerField(null=True)),
                ('prize_title', models.CharField(max_length=255)),
                ('prize_image', models.CharField(max_length=255, null=True)),
                ('prize_description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'contest_prizes',
            },
        ),
        migrations.CreateModel(
            name='contest_sponsor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('online_presense', models.CharField(blank=True, max_length=255, null=True)),
                ('offline_presense', models.CharField(blank=True, max_length=255, null=True)),
                ('brand_name', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('web_url', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('company_phone', models.IntegerField(blank=True, null=True)),
                ('company_gst', models.CharField(max_length=255)),
                ('company_logo', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('person_name', models.CharField(max_length=255)),
                ('person_designation', models.CharField(max_length=255)),
                ('person_mobile', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('person_mail', models.EmailField(blank=True, max_length=70, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'contest_sponsor',
            },
        ),
        migrations.CreateModel(
            name='contests_old',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255, null=True)),
                ('sponsor_id', models.IntegerField()),
                ('contest_image', models.CharField(max_length=255, null=True)),
                ('contest_end_date', models.DateTimeField(null=True)),
                ('contest_term_conditions', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'contests-old',
            },
        ),
        migrations.CreateModel(
            name='failed_jobs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('connection', models.TextField()),
                ('queue', models.TextField()),
                ('payload', models.TextField()),
                ('exception', models.TextField()),
                ('failed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'failed_jobs',
            },
        ),
        migrations.CreateModel(
            name='global_ads',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('video_type', models.CharField(max_length=255)),
                ('video_url', models.CharField(max_length=255)),
                ('video_ad_time', models.CharField(max_length=255, null=True)),
                ('video_ad_skip_time', models.CharField(max_length=100, null=True)),
                ('adv_header_type', models.CharField(max_length=255)),
                ('adv_header_content', models.TextField()),
                ('adv_sidebar_top_type', models.CharField(max_length=255)),
                ('adv_sidebar_top_cntnt', models.TextField()),
                ('adv_sidebar2_type', models.CharField(max_length=255)),
                ('adv_sidebar2_content', models.TextField()),
                ('disable_header_ads', models.CharField(max_length=11, null=True)),
                ('disable_side1_ads', models.CharField(max_length=11, null=True)),
                ('disable_side2_ads', models.CharField(max_length=11, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'global_ads',
            },
        ),
        migrations.CreateModel(
            name='global_ads_login',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('adv_login_type', models.CharField(max_length=11)),
                ('adv_login_content', models.TextField()),
                ('disable_login_ads', models.CharField(max_length=11, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'global_ads_login',
            },
        ),
        migrations.CreateModel(
            name='global_ads_profile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('adv_profile_top_type', models.CharField(max_length=255, null=True)),
                ('adv_profile_top_content', models.TextField()),
                ('adv_profile_side1_type', models.CharField(max_length=255, null=True)),
                ('adv_profile_side1_content', models.TextField()),
                ('adv_profile_side2_type', models.CharField(max_length=255, null=True)),
                ('adv_profile_side2_content', models.TextField()),
                ('disable_profile_top_ads', models.CharField(max_length=11, null=True)),
                ('disable_profile_side1_ads', models.CharField(max_length=11, null=True)),
                ('disable_profile_side2_ads', models.CharField(max_length=11, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'global_ads_profile',
            },
        ),
        migrations.CreateModel(
            name='jobs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('queue', models.CharField(max_length=255)),
                ('payload', models.TextField()),
                ('attempts', models.SmallIntegerField()),
                ('reserved_at', models.IntegerField(null=True)),
                ('available_at', models.IntegerField()),
                ('created_at', models.IntegerField()),
            ],
            options={
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='knowledge_center',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tags', models.CharField(max_length=255)),
                ('age_group', models.CharField(max_length=255)),
                ('question', models.CharField(max_length=255)),
                ('answers', models.TextField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'knowledge_center',
            },
        ),
        migrations.CreateModel(
            name='leaderboard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('userid', models.IntegerField()),
                ('uname', models.CharField(max_length=255)),
                ('wincounts', models.CharField(max_length=255)),
                ('winpercantege', models.CharField(max_length=255)),
                ('totalparticipate', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'leaderboard',
            },
        ),
        migrations.CreateModel(
            name='mailerhtml',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('html', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mailerhtml',
            },
        ),
        migrations.CreateModel(
            name='migrations',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
            },
        ),
        migrations.CreateModel(
            name='password_resets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'password_resets',
            },
        ),
        migrations.CreateModel(
            name='previews',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_id', models.IntegerField()),
                ('question', models.CharField(max_length=255)),
                ('question_slag', models.CharField(max_length=255, null=True)),
                ('contest_title', models.CharField(max_length=225, null=True)),
                ('contest_venue', models.CharField(max_length=225, null=True)),
                ('contest_schedule_date', models.CharField(max_length=255, null=True)),
                ('contest_schedule_time', models.CharField(max_length=255, null=True)),
                ('prize_description', models.TextField()),
                ('description', models.TextField()),
                ('contest_term_conditions', models.TextField()),
                ('contestWinTitle', models.TextField()),
                ('contestWinAmountTitle', models.TextField()),
                ('sponsor_id', models.IntegerField()),
                ('contestCreativeType', models.CharField(max_length=255, null=True)),
                ('contest_image', models.CharField(max_length=255, null=True)),
                ('contest_image_thumb', models.CharField(max_length=255, null=True)),
                ('no_winner', models.IntegerField(default=None)),
                ('type_price_id', models.IntegerField(null=True)),
                ('total_amount', models.IntegerField()),
                ('amount_distribution', models.CharField(max_length=255, null=True)),
                ('position_amount', models.CharField(max_length=255, null=True)),
                ('equal_amount', models.CharField(max_length=255, null=True)),
                ('contest_start_date', models.DateField(null=True)),
                ('contest_start_time', models.CharField(max_length=255, null=True)),
                ('contest_end_date', models.DateField(null=True)),
                ('contest_end_time', models.CharField(max_length=255, null=True)),
                ('video_ad_type', models.CharField(max_length=255, null=True)),
                ('video_ad_company', models.CharField(max_length=255, null=True)),
                ('video_ad_url', models.CharField(max_length=255, null=True)),
                ('video_ad_time', models.CharField(max_length=255, null=True)),
                ('video_ad_skip_time', models.CharField(max_length=100, null=True)),
                ('ad_after_header_type', models.CharField(max_length=255, null=True)),
                ('google_ad_after_header', models.CharField(max_length=255, null=True)),
                ('ad_after_header_image', models.CharField(max_length=255, null=True)),
                ('ad_after_header_url', models.CharField(max_length=255, null=True)),
                ('ad_sidebar_1_type', models.CharField(max_length=255, null=True)),
                ('ad_1_side_image', models.CharField(max_length=255, null=True)),
                ('google_ad_1_sidebar', models.CharField(max_length=255, null=True)),
                ('ad_1_side_url', models.CharField(max_length=255, null=True)),
                ('ad_sidebar_2_type', models.CharField(max_length=255, null=True)),
                ('ad_2_side_image', models.CharField(max_length=255, null=True)),
                ('google_ad_2_sidebar', models.CharField(max_length=255, null=True)),
                ('ad_2_side_url', models.CharField(max_length=255, null=True)),
                ('feature_image', models.CharField(max_length=225, null=True)),
                ('mobile_feature_img', models.CharField(max_length=255, null=True)),
                ('rest_participants', models.CharField(max_length=225, null=True)),
                ('type_of_prize_rest_id', models.IntegerField(null=True)),
                ('amount_rest', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'previews',
            },
        ),
        migrations.CreateModel(
            name='reachus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reachus',
            },
        ),
        migrations.CreateModel(
            name='sponsors',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('tab_name', models.CharField(max_length=256, null=True)),
                ('sponsor_image', models.CharField(max_length=255, null=True)),
                ('sponsor_logo', models.CharField(max_length=255, null=True)),
                ('sponsor_description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'sponsors',
            },
        ),
        migrations.CreateModel(
            name='subscribes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=255)),
                ('ids', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subscribes',
            },
        ),
        migrations.CreateModel(
            name='tbl_cities',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('state_id', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_cities',
            },
        ),
        migrations.CreateModel(
            name='tbl_countries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sortname', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=150)),
                ('phonecode', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_countries',
            },
        ),
        migrations.CreateModel(
            name='tbl_referal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('refer_user_id', models.IntegerField()),
                ('referal_user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_referal',
            },
        ),
        migrations.CreateModel(
            name='tbl_states',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('country_id', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_states',
            },
        ),
        migrations.CreateModel(
            name='temp_edit_winner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('contest_id', models.IntegerField()),
                ('user_position', models.IntegerField()),
                ('user_name', models.CharField(max_length=255)),
                ('user_email', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'temp_edit_winner',
            },
        ),
        migrations.CreateModel(
            name='user_points',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('winner', models.IntegerField(default=0)),
                ('participate', models.IntegerField(default=0)),
                ('correct_answer', models.IntegerField(default=0)),
                ('wrong_answer', models.IntegerField(default=0)),
                ('sharepoints', models.IntegerField(default=0)),
                ('registration_pts', models.IntegerField(default=0)),
                ('referpts', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'user_points',
            },
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('facebook_id', models.CharField(blank=True, max_length=255, null=True)),
                ('google_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('profile_pic', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('dob', models.DateField(default=None)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('house_no', models.CharField(blank=True, max_length=255, null=True)),
                ('remember_token', models.CharField(max_length=255, null=True)),
                ('verified', models.IntegerField(blank=True, default=None, null=True)),
                ('sendVerification', models.IntegerField(blank=True, default=None, null=True)),
                ('token', models.CharField(max_length=255, null=True)),
                ('user_status', models.IntegerField(blank=True, default=None, null=True)),
                ('user_value', models.IntegerField(blank=True, default=None, null=True)),
                ('rank_initial', models.BigIntegerField(blank=True, default=None, null=True)),
                ('rank_final', models.BigIntegerField(blank=True, default=None, null=True)),
                ('userpoints', models.BigIntegerField(blank=True, default=None, null=True)),
                ('sharecount', models.BigIntegerField(blank=True, default=None, null=True)),
                ('referral_count', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('referral_code', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('referral_by', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('mobile_no', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('mobile_otp', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('email', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('email_otp', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('email_verified_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user_type', models.IntegerField(blank=True, default=None, null=True)),
                ('is_user_verified', models.IntegerField(blank=True, default=None, null=True)),
                ('masterstatus', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tbl_cities')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tbl_countries')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tbl_states')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='users_questions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('question_id', models.IntegerField()),
                ('answer', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users_questions',
            },
        ),
        migrations.CreateModel(
            name='winners',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contest_id', models.IntegerField()),
                ('email', models.CharField(max_length=255, null=True)),
                ('prize_type', models.CharField(max_length=255, null=True)),
                ('amount', models.CharField(max_length=255, null=True)),
                ('amount_distribution', models.CharField(max_length=255, null=True)),
                ('position', models.CharField(max_length=255, null=True)),
                ('amount_type', models.CharField(max_length=255, null=True)),
                ('user_name', models.CharField(max_length=225, null=True)),
                ('payment', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.users')),
            ],
            options={
                'db_table': 'winners',
            },
        ),
        migrations.CreateModel(
            name='contests',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contest_title', models.CharField(blank=True, max_length=225, null=True)),
                ('question', models.CharField(default=None, max_length=255)),
                ('contest_venue', models.CharField(blank=True, max_length=225, null=True)),
                ('contest_schedule_date', models.DateField(blank=True, null=True)),
                ('contest_schedule_time', models.TimeField(blank=True, default=None, null=True)),
                ('uploadContest', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('contest_image', models.FileField(blank=True, default=None, null=True, upload_to='userprofile')),
                ('contest_thumbnail', models.FileField(blank=True, default=None, null=True, upload_to='myprofile')),
                ('video_ad_url', models.CharField(blank=True, max_length=255, null=True)),
                ('prize_description', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('contest_term_conditions', models.TextField(blank=True, null=True)),
                ('no_winner', models.IntegerField(blank=True, default=None, null=True)),
                ('contest_image_thumb', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('total_amount', models.IntegerField(blank=True, null=True)),
                ('eqamount', models.IntegerField(blank=True, null=True)),
                ('amount_change', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('reamt', models.CharField(blank=True, max_length=255, null=True)),
                ('total_amount_nd', models.IntegerField(blank=True, null=True)),
                ('position_amount', models.CharField(blank=True, max_length=255, null=True)),
                ('contestWinTitle', models.TextField(blank=True, default=None, max_length=250, null=True)),
                ('contestWinAmountTitle', models.TextField(blank=True, default=None, max_length=250, null=True)),
                ('contest_start_date', models.DateField(blank=True, null=True)),
                ('contest_start_time', models.TimeField(blank=True, default=None, max_length=200, null=True)),
                ('contest_end_date', models.DateField(blank=True, null=True)),
                ('contest_end_time', models.TimeField(blank=True, default=None, max_length=200, null=True)),
                ('feature_image', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('mobile_feature_img', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('vac', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('video_ad_type', models.CharField(blank=True, max_length=255, null=True)),
                ('video_ad_company', models.CharField(blank=True, max_length=255, null=True)),
                ('video_ad_time', models.TimeField(blank=True, default=None, max_length=200, null=True)),
                ('video_ad_skip_time', models.TimeField(blank=True, default=None, max_length=200, null=True)),
                ('dgc', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('google_ad_after_header', models.CharField(blank=True, max_length=255, null=True)),
                ('ad_after_header_image', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('ad_after_header_url', models.CharField(blank=True, max_length=255, null=True)),
                ('ptg', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('google_ad_1_sidebar', models.CharField(blank=True, max_length=255, null=True)),
                ('ad_1_side_image', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('ad_1_side_url', models.CharField(blank=True, max_length=255, null=True)),
                ('gpk', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('google_ad_2_sidebar', models.CharField(blank=True, max_length=255, null=True)),
                ('ad_2_side_image', models.FileField(blank=True, default=None, null=True, upload_to='')),
                ('ad_2_side_url', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.contest_category')),
                ('sponsor_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.contest_sponsor')),
                ('type_price', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.contest_price_list')),
                ('type_price_nd', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.contest_price_list')),
            ],
            options={
                'db_table': 'contests',
            },
        ),
    ]
